{"version":3,"sources":["assets/logo-principal.png","components/MainButton.jsx","view/Welcome.jsx","components/Header.jsx","components/NavigationBar.jsx","components/OrderCard.jsx","controller/main.js","controller/firestore.js","view/ChiefChef.jsx","components/ProductsCard.jsx","components/ProductList.jsx","components/AddOrder.jsx","view/Waiter.jsx","view/Error.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","MainButton","name","reference","classbtn","to","className","type","Welcome","src","logo","alt","Header","props","NavigationBar","filterByState","onClick","OrderCard","order","changeState","client","table","Date","date","toLocaleString","getMinutes","products","map","item","key","id","productName","price","total","state","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","collectionOrder","firestore","collection","add","then","docRef","console","log","catch","error","orderState","Promise","resolve","reject","where","onSnapshot","query","docs","forEach","push","data","status","deliveredDate","toISOString","doc","update","ChiefChef","useState","orders","setOrders","setOrderState","orderList","useEffect","ProductCard","product","image","title","prototype","PropTypes","number","string","defaultProps","ProductList","handleIncrementItem","handleDecreacetItem","deleteAproduct","p","quantity","disabled","toFixed","AddOrder","handleInputChange","handleClick","handleClear","htmlFor","placeholder","onChange","value","description","productList","Waiter","initialStateOrder","setOrder","group","setGroup","acum","addAproduct","newOrder","itemIndex","findIndex","element","e","target","arrayOrder","preventDefault","productId","newItem","find","indexOf","splice","filter","ProductsCard","Error","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.774c02eb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-principal.50677615.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst MainButton = ({ name, reference, classbtn }) => (\r\n  <div>\r\n    <Link to={reference}>\r\n      <button className={classbtn} type=\"button\">\r\n        {name}\r\n      </button>\r\n    </Link>\r\n  </div>\r\n);\r\nexport default MainButton;\r\n","import React from 'react';\r\nimport logo from '../assets/logo-principal.png';\r\nimport MainButton from '../components/MainButton';\r\n\r\nconst Welcome = () => (\r\n  <div className=\"component-welcome\">\r\n    <img className=\"logo-welcome\" src={logo} alt=\"Mikuy Burger\" />\r\n    <div className=\"prueba\">\r\n      <MainButton classbtn=\"btn btn-welcome\" name=\"Mesero\" reference=\"/mozo\" />\r\n      <MainButton classbtn=\"btn btn-welcome\" name=\"Jefe de Cocina\" reference=\"/jefecocina\" />\r\n    </div>\r\n  </div>\r\n);\r\nexport default Welcome;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../assets/logo-principal.png';\r\n\r\nconst Header = (props) => (\r\n  <header className=\"head-waiter\">\r\n    <Link to=\"/\"><img src={logo} alt=\"imagen de product\" className=\"logo-header\" /></Link>\r\n    <h1>{props.name}</h1>\r\n  </header>\r\n);\r\nexport default Header;\r\n","import React from 'react';\n\nconst NavigationBar = ({ filterByState }) => (\n  <div>\n    <nav className=\"nav-order\">\n      <ul>\n        <li className=\"nav-btn\" onClick={() => filterByState('pendiente')}>Pendientes</li>\n        <li className=\"nav-btn\" onClick={() => filterByState('listo')}>Listos</li>\n        <li className=\"nav-btn\" onClick={() => filterByState('entregado')}>Entregados</li>\n      </ul>\n    </nav>\n  </div>\n);\nexport default NavigationBar;\n","import React from 'react';\n\nconst OrderCard = ({ order, changeState }) => {\n  return (\n    <div className=\"status\">\n      <p className=\"\">\n        <span>Nº Pedido: </span>\n        <span className=\"info\">Hola</span>\n      </p>\n      <p className=\"\">\n        <span>Cliente: </span>\n        <span className=\"info\">{order.client} </span>\n        <span>N° de Mesa: </span>\n        <span className=\"info\">{order.table}</span>\n      </p>\n      <p className=\"\">\n        <span>Fecha de Pedido: </span>\n        <span className=\"info\">{(new Date(order.date)).toLocaleString('es-PE')}</span>\n        <span>Tiempo Transcurrido: </span>\n        <span className=\"info\">{(new Date(new Date() - new Date(order.date))).getMinutes()}min</span>\n      </p>\n      <table className=\"tableOrderCard\">\n        <thead>\n          <tr>\n            <td>CANT.</td>\n            <td>DESCRIPCIÓN</td>\n            <td>PRECIO</td>\n          </tr>\n        </thead>\n        <tbody>\n          {order.products.map((item) => (\n            <tr key={item.id}>\n              <td>{item.id}</td>\n              <td>{item.productName}</td>\n              <td>{item.price}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <p className=\"total\">\n        TOTAL = S/.{order.total}\n      </p>\n      { order.state === 'pendiente' && (\n      <button type=\"button\" className=\"button-ready\" onClick={() => changeState(order.id,'listo')}>\n        LISTO!\n      </button>\n      )}\n      { order.state === 'listo' && (\n      <button type=\"button\" className=\"button-delivered\" onClick={() => changeState(order.id,'entregado')}>\n        Entregado!\n      </button>\n      )}\n    </div>\n  );\n};\n\nexport default OrderCard;\n","// import 'firebase/performance';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyDQ-l-ktaFpPR78yJldDCLGMVnF3kVw-_g',\r\n  authDomain: 'mikuy-burger.firebaseapp.com',\r\n  databaseURL: 'https://mikuy-burger.firebaseio.com',\r\n  projectId: 'mikuy-burger',\r\n  storageBucket: 'mikuy-burger.appspot.com',\r\n  messagingSenderId: '869639968024',\r\n  appId: '1:869639968024:web:4026f9761e086377787a6d',\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import firebase from './main';\n\n// COLECCION EN FIRESTORE - ADD ORDER\nconst collectionOrder = () => firebase.firestore().collection('Orders');\n\n// AGREGAR DOCS A LA COLECCION\nconst addOrder = (order) => {\n  collectionOrder().add(order)\n    .then((docRef) => {\n      console.log('Document written with ID: ', docRef.id);\n    })\n    .catch((error) => {\n      console.error('Error adding document: ', error);\n    });\n};\n\n// LEER LOS DOCS DE LA COLECCION\nconst getOrder = (orderState) => new Promise((resolve, reject) => {\n  collectionOrder().where('state', '==', orderState).onSnapshot((query) => {\n    const docs = [];\n    query.forEach((order) => {\n      docs.push({ ...order.data(), id: order.id });\n    });\n    // console.log(docs);\n    resolve(docs);\n  });\n});\n\nconst updateOrderState = (id, status) => {\n  const deliveredDate = new Date().toISOString();\n  firebase.firestore().collection('Orders').doc(id).update({\n    state: status,\n    deliveredDate,\n  });\n};\n\nexport default {\n  addOrder,\n  getOrder,\n  updateOrderState,\n};\n","import React, { useEffect, useState } from 'react';\n// import React, { Component } from 'react';\nimport Header from '../components/Header';\nimport NavigationBar from '../components/NavigationBar';\nimport OrderCard from '../components/OrderCard';\nimport firestore from '../controller/firestore';\n\n// class ChiefChef extends Component{\nconst ChiefChef = () => {\n  // constructor(props){\n  //   super(props);\n  //   this.state={\n  //     orders:[],\n  //     orderState:'pendiente',\n  //   };\n  // }\n\n  // componentDidMount() {\n  //   this.changeState(this.state.orderState);\n  // }\n\n  // changeState = (state) => {\n  //   console.log(state);\n  //   this.setState({orderState:state});\n  //   firestore.getOrder(state).then((orderList) => {\n  //   this.setState({orders:orderList});\n  //   });\n  // };\n\n  const [orders, setOrders] = useState([]);\n  const [orderState, setOrderState] = useState('pendiente');\n\n  const filterByState = (state) => {\n    console.log(state);\n    setOrderState(state);\n    firestore.getOrder(state).then((orderList) => {\n      setOrders(orderList);\n    });\n  };\n  const changeState = (id, state) => {\n    console.log(state);\n    console.log(id);\n    firestore.updateOrderState(id, state);\n    filterByState(orderState);\n  };\n\n  useEffect(() => {\n    filterByState(orderState);\n  }, []);\n\n  // render() {\n  return (\n    <>\n      <Header name=\"JEFE DE COCINA\" />\n      <NavigationBar filterByState={filterByState} />\n      {\n        orders.map((order) => (\n          <OrderCard key={order.id} order={order} changeState={changeState} />\n        ))\n      }\n    </>\n  );\n  // }\n};\nexport default ChiefChef;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import products from '../products.json';\r\n\r\nconst ProductCard = ({ product , onClick }) => (\r\n  <div className=\"card\" onClick={()=>onClick(product)} >\r\n    <img src={product.image} alt={product.title} className=\"width-product\" />\r\n    <p className=\"price\">{`S/.${product.price}.00`}</p>\r\n    <p className=\"name\">{product.productName}</p>\r\n  </div>\r\n);\r\n\r\nProductCard.prototype = {\r\n  product: {\r\n    id: PropTypes.number,\r\n    title: PropTypes.string,\r\n    image: PropTypes.string,\r\n    price: PropTypes.number,\r\n    productName: PropTypes.string,\r\n  },\r\n};\r\nProductCard.defaultProps = {\r\n  product: {\r\n    title: 'No se encontró titulo',\r\n    image: 'https://blogtrip.org/wp-content/uploads/2016/06/visitar-paris-ciudad-luz-fotografia-nocturna.jpg',\r\n    price: '--',\r\n  },\r\n};\r\nexport default ProductCard;\r\n","import React from 'react';\r\n\r\nconst ProductList = ({products, handleIncrementItem, handleDecreacetItem, deleteAproduct}) => {\r\n  return (\r\n    <>\r\n      {products.map((p)=> (\r\n        <tr className=\"listPedidoOrder\" key={p.id}>\r\n          <td>\r\n            <button className=\"btn-increaseProduct\" type=\"button\" onClick={(() => handleIncrementItem(p.id))}>+</button>\r\n            <span>{p.quantity}</span>\r\n            <button className=\"btn-decreaseProduct\" type=\"button\" onClick={(() => handleDecreacetItem(p.id))} disabled={p.quantity === 1 ? true : false}>-</button>\r\n          </td>\r\n          <td>{p.productName}</td>\r\n          <td>{`S/. ${(p.price * p.quantity).toFixed(2)}`}</td>\r\n          <td>\r\n            <button className=\"btn-delete\" type=\"button\" onClick={(() => deleteAproduct(p))}>\r\n              <img src=\"https://cdn1.iconfinder.com/data/icons/toolbar-signs/512/trash-512.png\" alt=\"eliminar\" />\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n","import React from 'react';\nimport ProductList from './ProductList';\n\n// eslint-disable-next-line max-len\nconst AddOrder = ({order, handleInputChange, handleClick, handleClear, handleIncrementItem, handleDecreacetItem, total, deleteAproduct}) => {\n  return (\n    <div className=\"add-order\">\n      <div className=\"order-header\">\n        <label htmlFor=\"user\">Cliente:\n          <input\n            className=\"input-user\"\n            placeholder=\"Nombre\"\n            onChange={handleInputChange}\n            name=\"client\"\n            value={order.client}\n          />\n        </label>\n        <label htmlFor=\"table\"> N° Mesa:\n          <input\n            className=\"input-user\"\n            placeholder=\"N° de Mesa\"\n            onChange={handleInputChange}\n            name=\"table\"\n            value={order.table}\n          />\n        </label>\n      </div>\n      <table>\n        <thead>\n          <tr>\n            <td>Cantidad.</td>\n            <td>Descripcion</td>\n            <td>Precio</td>\n            <td>Borrar</td>\n          </tr>\n        </thead>\n        <tbody>\n          <ProductList products={order.products} handleIncrementItem={handleIncrementItem} handleDecreacetItem={handleDecreacetItem} deleteAproduct={deleteAproduct} />\n        </tbody>\n      </table>\n      <div className=\"total\">\n        <p>Total:</p>\n        <span>{`S/. ${total().toFixed(2)}`}</span>\n      </div>\n      <div className=\"order-description\">\n        <p>Descripción</p>\n        <textarea\n          className=\"box\"\n          placeholder=\"Ingresa descripción\"\n          onChange={handleInputChange}\n          name=\"description\"\n          value={order.description}\n        />\n      </div>\n      <div>\n        <button className=\"btn btn-order\" type=\"button\" onClick={handleClick}>Enviar a cocina</button>\n        <button className=\"btn btn-order\" type=\"button\" onClick={handleClear}>Cancelar pedido</button>\n      </div>\n    </div>\n  );\n};\n\nexport default AddOrder;\n","import React, { useState } from 'react';\nimport data from '../data.json';\nimport ProductsCard from '../components/ProductsCard';\nimport Header from '../components/Header';\nimport AddOrder from '../components/AddOrder';\nimport MainButton from '../components/MainButton';\nimport firestore from '../controller/firestore';\n\nconst productList = data.products;\n\nconst Waiter = () => {\n  const initialStateOrder = {\n    client: '',\n    table: '',\n    products: [],\n    total: '',\n    description: '',\n    date: new Date().toISOString(),\n    state: 'pendiente',\n  };\n  const [order, setOrder] = useState(initialStateOrder);\n  const [group, setGroup] = useState('Desayuno');\n\n  const handleIncrementItem = (productId) => {\n    const newOrder = { ...order };\n    const newItem = newOrder.products.find((element) => element.id === productId);\n    newItem.quantity = (newItem.quantity ? newItem.quantity + 1 : 2);\n    setOrder(newOrder);\n  };\n\n  const handleDecreacetItem = (productId) => {\n    const newOrder = { ...order };\n    const newItem = newOrder.products.find((element) => element.id === productId);\n    newItem.quantity = (newItem.quantity ? newItem.quantity - 1 : 2);\n    setOrder(newOrder);\n  };\n\n  const total = () => {\n    let acum = 0;\n    const newOrder = { ...order };\n    newOrder.products.map((p) => acum += p.price * p.quantity);\n    return acum;\n  };\n\n  const deleteAproduct = (product) => {\n    const newOrder = { ...order };\n    const itemIndex = newOrder.products.indexOf(product);\n    if (itemIndex !== -1) {\n      newOrder.products.splice(itemIndex, 1);\n    }\n    setOrder(newOrder);\n  };\n\n  const addAproduct = (product) => {\n    const newOrder = { ...order };\n    const itemIndex = newOrder.products.findIndex((element) => element.id === product.id);\n    if (itemIndex >= 0) {\n      newOrder.products[itemIndex].quantity += 1;\n    } else {\n      product.quantity = 1;\n      newOrder.products.push(product);\n    }\n    newOrder.total = total();\n    setOrder(newOrder);\n  };\n\n  const addOrderFirestore = (arrayOrder) => {\n    firestore.addOrder(arrayOrder);\n    console.log(arrayOrder);\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setOrder({ ...order, [name]: value });\n  };\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    addOrderFirestore(order);\n    setOrder({ ...initialStateOrder });\n  };\n\n  const handleClear = (e) => {\n    e.preventDefault();\n    setOrder({ ...initialStateOrder });\n    console.log('Clear');\n  };\n\n  return (\n    <>\n      <Header name=\"ORDEN DE PEDIDO\" />\n      <MainButton classbtn=\"btn btn-header\" name=\"Estados de Pedido\" reference=\"/mozo\" />\n      <div className=\"body-waiter\">\n        <div className=\"grid-left\">\n          <AddOrder order={order} handleInputChange={handleInputChange} handleClick={handleClick} handleClear={handleClear} handleIncrementItem={handleIncrementItem} handleDecreacetItem={handleDecreacetItem} total={total} deleteAproduct={deleteAproduct} />\n        </div>\n        <div className=\"grid-right\">\n          <div className=\"content-groups\">\n            <button className=\"btn btn-waiter\" onClick={() => setGroup('Desayuno')} type=\"button\">DESAYUNO</button>\n            <button className=\"btn btn-waiter\" onClick={() => setGroup('Hamburguesas')} type=\"button\">HAMBURGUESA</button>\n            <button className=\"btn btn-waiter\" onClick={() => setGroup('Acompañamientos')} type=\"button\">ACOMPAÑAMIENTO</button>\n            <button className=\"btn btn-waiter\" onClick={() => setGroup('Bebidas')} type=\"button\">BEBIDAS</button>\n          </div>\n          <div className=\"content-products\">\n            {\n              productList.filter((product) => (product.group === group)).map((p) => (\n                <ProductsCard\n                  key={p.id}\n                  product={p}\n                  onClick={addAproduct}\n                />\n              ))\n          }\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default Waiter;\n","import React from 'react';\r\n\r\nconst Error = () => (\r\n  <div className=\"ed-grid\">\r\n    <h1>error 404</h1>\r\n    <span>pagina no encontrada</span>\r\n  </div>\r\n);\r\nexport default Error;\r\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router, Route, Switch, HashRouter,\r\n} from 'react-router-dom';\r\nimport Welcome from './view/Welcome';\r\nimport ChiefChef from './view/ChiefChef';\r\nimport Waiter from './view/Waiter';\r\nimport Error from './view/Error';\r\nimport './sass/index.scss';\r\n\r\nconst App = () => (\r\n  <Router>\r\n    <HashRouter>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Welcome} />\r\n        <Route path=\"/mozo\">\r\n          <Waiter />\r\n        </Route>\r\n        <Route path=\"/jefecocina\" component={ChiefChef} />\r\n        <Route component={Error} />\r\n      </Switch>\r\n    </HashRouter>\r\n  </Router>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n// import { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// <BrowserRouter>\r\n// <App />\r\n// </BrowserRouter>,\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}